import React from 'react';
import ImageKitComponent from "../ImageKitComponent";
import { IKContextCombinedProps } from "../IKContext/props";
import { IKVideoProps } from './combinedProps';
import { IKImageState } from '../../utils/Utility';
export declare type IKVideoState = {
    currentUrl?: string;
    contextOptions: IKContextCombinedProps;
};
declare class IKVideo extends ImageKitComponent<IKVideoProps> {
    videoRef: React.RefObject<HTMLVideoElement>;
    state: IKVideoState;
    static propTypes: {
        path: import("prop-types").Requireable<string>;
        src: import("prop-types").Requireable<string>;
        queryParameters: import("prop-types").Requireable<{
            [x: string]: NonNullable<NonNullable<string | number | null | undefined>>;
        }>;
        transformation: import("prop-types").Requireable<object[]>;
        transformationPosition: import("prop-types").Requireable<string>;
        publicKey: import("prop-types").Requireable<string>;
        urlEndpoint: import("prop-types").Requireable<string>;
        authenticationEndpoint: import("prop-types").Requireable<string>;
    };
    constructor(props: IKVideoProps, context: any);
    componentDidMount(): void;
    componentDidUpdate(prevProps: IKVideoProps, prevState: IKImageState): void;
    render(): JSX.Element;
}
export default IKVideo;
